tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObs$iter
kmObj$iter
plot(x, y, col = kmObj$cluster, pch 19 = lwd = 2)
plot(x, y, col = kmObj$cluster, pch = 19 = lwd = 2)
plot(x, y, col = kmObj$cluster, pch = 19, lwd = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, kmeans(dataGrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame), kmeans(dataGrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame), kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", set = TRUE)
source("addPatt.R", local set = TRUE)
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2$v[,2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[ ,1] $ svd1$d[1]) %*% t(svd1$v[ ,1])
a1 <- (svd1$u[ ,1] * svd1$d[1]) %*% t(svd1$v[ ,1])
myImage(a1)
a2 <- svd1$u[ ,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[ ,1:2])
myImage(a2)
myImage(svd1$u[ ,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[ ,1:5]))
myImage(svd1$u[ ,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[ ,1:10]))
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, boolean = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1, 12)
names(sub1, n = 12)
names(sub1)[1:12]
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
dim(svd1$u)
maxCon <- which.max(svd$v)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[ ,2])
mdist <- dist(sub1[, 10:12])
mdist <- dist(sub1[, c(10:12, maxCon])
mdist <- dist(sub1[, c(10:12, maxCon)])
hclustering <- hclusst(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
laying <- which(kClust$size == 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, airquality, layout = c(5,1))
p <- xyplot(Ozonz ~ Wind, data = airquality)
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamon$color)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color*cut, diamonds, strop = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color*cut, diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red, blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(a)
pal(1)
pal(seq(0, 1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(mpg$displ, mpg$hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = boxplot)
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = loess)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
g <- ggplo(mpg, aes(displ, hwy))
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
geom_smooth(g + geom_point())
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_po,t(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
g <- ggplot(mpg, aes(x = displ, y = hway, color = factor(year)))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
qplot(diamonds$price, data = diamonds)
range(diamonds$range)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), methode = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm", facets = . ~ cut)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoint <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
install.packages("knitr")
packages <- c("dplyr", "ggplot2", "knitr")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
setwd(./ReproducibleResearch/RepData_PeerAssessment1)
setwd(./ReproducibleResearch/RepData_PeerAssessment1)
setwd("./ReproducibleResearch/RepData_PeerAssessment1")
path <- getwd()
if (!file.exists("activity.csv")) {
unzip(file.path(path, "activity.zip"))
}
activity <- read.csv(file.path(path, "activity.csv"))
View(activity)
summary(activity)
str(activity)
head(activity)
?as.Date
activity$date <- as.Date(activity$date, "%Y-%m-%d")
str(activity)
packages <- c("dplyr", "ggplot2", "knitr", "data.table")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
setkey(activity, steps, date)
dailySteps <- data.table(melt(activity, key(activity))
setkey(activity, steps, date)
dailySteps <- data.table(melt(activity, key(activity)))
?aggregate
activity %>%
group_by(dates)
activity %>%
group_by(date)
activity %>%
group_by(date) %>%
summarize(steps)
activity %>%
group_by(date) %>%
summarize(dailySteps = sum(steps))
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
print(dailySteps)
qplot(date, data = dailySteps, geom="histogram", fill=gear,
main="Steps taken each day", xlab="Date",
ylab="Total steps")
qplot(date, data = dailySteps, geom = "histogram", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(date, totalSteps, data = dailySteps, geom = "histogram", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(date, totalSteps, data = dailySteps, geom = "bar", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(dailySteps$date, dailySteps$totalSteps, data = dailySteps, geom = "bar", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(totalSteps, data = dailySteps, geom = "bar", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(totalSteps, data = dailySteps, geom = "bar", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
qplot(totalSteps, data = dailySteps, geom = "histogram", fill = "orange",
main = "Steps taken each day", xlab = "Date",
ylab = "Total steps")
ggplot(dailySteps, aes(totalSteps, date)) +
geom_histogram()
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram()
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(binwidth = totalSteps)
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(binwidth = dailySteps$totalSteps)
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(binwidth = totalSteps)
?geom_histogram
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(bins = totalSteps) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(bins = dailySteps$totalSteps) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(bins = dailySteps$totalSteps, binwidth = x) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(bins = dailySteps$totalSteps, binwidth = dailySteps$totalSteps) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(totalSteps)) +
geom_histogram(bins = dailySteps$totalSteps) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(date)) +
geom_histogram(bins = dailySteps$date) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(dailySteps, aes(date, totalSteps)) +
geom_histogram(bins = dailySteps$date) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
View(dailySteps)
qplot(dailySteps$totalSteps, geom = "histogram")
p <- ggplot(data = dailySteps, aes(x = totalSteps)) +
geom_histogram(binwidth = diff(range(dailySteps$totalSteps))/30)
print(p)
qplot(dailySteps$totalSteps, data = dailySteps, geom = "histogram")
qplot(totalSteps, data = dailySteps, geom = "histogram")
str(dailySteps)
dailySteps <- activity %>%
group_by(date) %>%
as.data.frame(summarize(totalSteps = sum(steps)))
print(dailySteps)
str(dailySteps)
dailySteps <- activity %>%
group_by(date) %>%
as.data.frame(summarize(totalSteps = sum(steps)))
head(dailySteps)
activity %>%
group_by(date) %>%
dailySteps <- summarize(totalSteps = sum(steps))
print(dailySteps)
activity %>%
group_by(date) %>%
dailySteps <- summarize(totalSteps = sum(steps))
head(dailySteps)
activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
dailySteps
print(dailySteps)
View(dailySteps)
ggplot(dailySteps, aes(date, totalSteps)) +
geom_histogram(bins = dailySteps$date) +
labs(x = "Date", y = "Total steps", title = "Steps taken each day")
ggplot(data = dailySteps, aes(x = totalSteps)) +
geom_histogram(binwidth = diff(range(dailySteps$totalSteps))/30)
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
print(dailySteps)
qplot(dailySteps$totalSteps, geom="histogram")
max(dailySteps$totalSteps)
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps)) %>%
filter(!is.na(totalSteps))
print(dailySteps)
qplot(dailySteps$totalSteps, geom="histogram")
max(dailySteps$totalSteps)
qplot(dailySteps$totalSteps, geom="histogram", binwidth = 22000)
qplot(dailySteps$totalSteps, geom="histogram")
qplot(dailySteps$totalSteps, geom="histogram")
qplot(x = dailySteps$totalSteps, geom="histogram", binwidth = x)
ggplot(data= dailySteps, aes(dailySteps$totalSteps)) + geom_histogram()
str(dailySteps)
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
ggplot(data= dailySteps, aes(dailySteps$totalSteps)) + geom_histogram()
ggplot(data= dailySteps, aes(dailySteps$totalSteps)) + geom_histogram(binwidth = 1000)
ggplot(data= dailySteps, aes(dailySteps$totalSteps)) + geom_histogram(binwidth = 100)
ggplot(data= dailySteps, aes(dailySteps$totalSteps)) + geom_histogram(binwidth = 1000)
filter(dailySteps, totalSteps <= 10000 & totalSteps > 11000)
filter(dailySteps, totalSteps = 10000)
filter(dailySteps, totalSteps < 10000 && totalSteps > 11000)
filter(dailySteps, totalSteps <= 1000)
summary(dailySteps)
filter(dailySteps, totalSteps <= 11000 && totalSteps >= 10000)
filter(dailySteps, totalSteps < 11000 && totalSteps >= 10000)
filter(dailySteps, totalSteps < 20000)
filter(dailySteps, totalSteps > 20000)
filter(dailySteps, totalSteps < 11000 & totalSteps >= 10000)
ggplot(data = dailySteps, aes(dailySteps$totalSteps)) +
geom_histogram(binwidth = 1000) +
labs(x = "Total number of steps per day",
y = "Count",
title = "Total number of steps taken each day")
summary(dailySteps$totalSteps)
averageSteps <- activity %>%
group_by(date) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
ggplot(averageSteps, aes(date, avgSteps)) +
geom_line()
?geom_path
ggplot(averageSteps, aes(date, avgSteps)) +
geom_path()
ggplot(averageSteps, aes(date, avgSteps)) +
geom_line()
length(is.na(averageSteps$avgSteps))
is.na(averageSteps$avgSteps)
sum(is.na(averageSteps$avgSteps))
summary(averageSteps)
View(averageSteps)
averageSteps <- activity %>%
group_by(date) %>%
summarize(avgSteps = mean(steps), interval)
print(averageSteps)
View(activity)
averageSteps <- activity %>%
group_by(date) %>%
summarize(avgSteps = mean(steps), interval = interval)
print(averageSteps)
averageSteps <- activity %>%
group_by(date, interval) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
averageSteps <- activity %>%
group_by(date) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
View(averageSteps)
ggplot(activity, aes(interval, steps)) +
geom_line()
ggplot(activity, aes(interval, steps)) +
geom_point()
averageSteps <- activity %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
summary(averageSteps)
averageSteps <- activity %>%
group_by(date) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
View(dailySteps)
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps), na.rm = TRUE)
print(dailySteps)
View(dailySteps)
dailySteps <- activity %>%
group_by(date) %>%
summarize(totalSteps = sum(steps, na.rm = TRUE))
print(dailySteps)
View(dailySteps)
dailySteps <- activity, na.rm = TRUE %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
print(dailySteps)
activityClean <- filter(activity, steps != NA)
head(ativityClean)
head(activityClean)
activityClean
activityClean <- filter(activity, !is.na(steps))
head(activityClean)
ailySteps <- activityClean %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
print(dailySteps)
dailySteps <- activityClean %>%
group_by(date) %>%
summarize(totalSteps = sum(steps))
print(dailySteps)
ggplot(data = dailySteps, aes(dailySteps$totalSteps)) +
geom_histogram(binwidth = 1000) +
labs(x = "Total number of steps per day",
y = "Count",
title = "Total number of steps taken each day")
averageSteps <- activity %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
averageSteps <- activityClean %>%
group_by(interval) %>%
summarize(avgSteps = mean(steps))
print(averageSteps)
summary(averageSteps)
ggplot(averageSteps, aes(interval, avgSteps)) +
geom_line()
ggplot(averageSteps, aes(interval, avgSteps)) +
geom_line() +
labs(x = "Interval of the day",
y = "Average number of steps",
title = "Average daily number of steps per 5-minute interval")
max(averageSteps$avgSteps)
filter(averageSteps, max(avgSteps))
filter(averageSteps, interval == max(avgSteps))
filter(averageSteps, which.max(avgSteps))
?which.max
maxInterval <- averageSteps %>%
filter(avgSteps = max(avgSteps))
maxInterval <- averageSteps %>%
filter(avgSteps == max(avgSteps))
maxInterval
summary(averageSteps)
```{r info}
summary(activity)
```
sum(is.na(activity$steps))
filter(activity, steps == is.na(steps))
sum(is.na(activity$steps))
